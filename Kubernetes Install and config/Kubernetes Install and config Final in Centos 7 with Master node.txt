################## Docker instal ##################
yum -y update && yum install -y vim wget net-tools yum-utils device-mapper-persistent-data lvm2
hostnamectl set-hostname k8smaster.k8slabs.bd
cat >> /etc/hosts  << EOF

127.0.0.1       k8smaster.k8slabs.bd k8smaster
192.168.7.123   k8smaster.k8slabs.bd k8smaster
192.168.7.124   k8sw01.k8slabs.bd k8smaster
EOF
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum -y install docker-ce docker-ce-cli containerd.io
sed -i 's/disabled_plugins/#disabled_plugins/g' /etc/containerd/config.toml
#containerd config default > /etc/containerd/config.toml
#echo '' >> /etc/containerd/config.toml
systemctl enable docker containerd && systemctl start docker containerd && systemctl status docker containerd

##################### system config ##################
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
swapoff -a
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
systemctl disable firewalld && systemctl stop firewalld
lsmod | grep br_netfilter
firewall-cmd --add-port={6443,2379-2380,10250,10251,10252,5473,179,5473}/tcp --permanent
firewall-cmd --add-port={4789,8285,8472}/udp --permanent
firewall-cmd --reload
modprobe br_netfilter
lsmod | grep br_netfilter
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
cat >> /etc/sysctl.d/k8s.conf << EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system
reboot
################################ kubernetes install and cofnig ###################################
cat > /etc/yum.repos.d/kubernetes.repo << EOF
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF
yum -y update && yum install -y kubelet kubeadm kubectl kubernetes-cni
docker info | grep -i cgroup
cat >> /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf << EOF
cgroup-driver=cgroupfs
EOF

mkdir -p $HOME/.kube

kubeadm init --apiserver-advertise-address=192.168.7.123 --pod-network-cidr=192.168.0.0/16
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config
systemctl start kubelet && sleep 5 && systemctl status kubelet
systemctl enable kubelet && systemctl start kubelet && sleep 5 && systemctl status kubelet

kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml

kubectl get nodes
kubectl config view
kubectl get nodes -o wide && kubectl get pods --all-namespaces -o wide
kubectl logs -n kube-system <pod name>

kubeadm token create --print-join-command




################## kernel:NMI watchdog: BUG: soft lockup - CPU#1 stuck for 60s! [containerd-shim:2184] ##########

echo 20 > /proc/sys/kernel/watchdog_thresh
or
echo "kernel.watchdog_thresh=20" > /etc/sysctl.d/99-watchdog_thresh.conf
sysctl -p  /etc/sysctl.d/99-watchdog_thresh.conf


sysctl -a  | grep softlockup
sysctl kernel.softlockup_panic=1
sysctl kernel.panic=60